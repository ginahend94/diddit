@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,400;0,700;1,100;1,400;1,700&display=swap');

:root {
    --accent-color: 120, 103, 162;
    /* LAVENDER */
    --main-color: 50, 50, 52;
    /* DARK MODE BG */
    --secondary-color: 40, 40, 42;
    /* DARK MODE SECONDARY */
    --tertiary-color: 60, 60, 62;
    /* DARK MODE TERTIARY */
    --text-color: 234, 234, 234;
    /* DARK MODE TEXT */
    --grayed-text-color: 133, 133, 133;
    /* DARK MODE TEXT BRIGHTER */
    --text-color-bright: 245, 245, 245;
    /* DARK MODE GRAYED-OUT */
    --accent-color-bright: 145, 118, 209;
    /* DANGER */
    --danger: 196, 62, 74;

    /* LIGHT MODE */
    /*
    --accent-color: 169, 133, 255;
    --secondary-color: 235, 235, 235;
    --main-color: 255, 255, 255;
    --text-color: 40, 40, 40;
    --grayed-text-color: 133, 133, 133;
    */

    --padding: 10px;
    --smaller-text: .8rem;
}

* {
    box-sizing: border-box;
    font-weight: normal;
}

body {
    width: 100vw;
    height: 100vh;
    font-family: 'Roboto', sans-serif;
    background-color: rgb(var(--main-color));
    color: rgb(var(--text-color));
    overflow: hidden;
    display: flex;
}

button {
    background-color: rgb(var(--accent-color));
    border: none;
    padding: 5px 10px;
    border-radius: 5px;
    cursor: pointer;
    transition: .2s;
    color: inherit;
}
button:hover {
    background-color: rgb(var(--accent-color-bright));
}
button:active {
    background-color: rgb(var(--accent-color));
}

button:disabled {
    opacity: .5;
    cursor: not-allowed;
}
button:disabled:hover {
    background-color: rgb(var(--accent-color));
}


/* SIDEBAR  */

h1 {
    border: solid 1px;
    text-align: center;
    justify-self: center;
} 

nav {
    height: 100%;
    min-width: 200px;
    max-width: 350px;
    display: flex;
    flex-direction: column;
    background-color: rgb(var(--secondary-color));
    overflow: auto;
    resize: horizontal;
}

nav header {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgb(var(--accent-color));
    padding: var(--padding);
    width: 100%;
    height: 100px;
}

.sidebar-lower {
    padding: var(--padding);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
}

nav ul {
    list-style: none;
    padding: 0;
}

.project-list-container {
    display: flex;
    flex-direction: column;
    align-items: end;
}

.project-list {
    width:calc(100% - 20px);
    display: flex;
    flex-direction: column;
    gap:5px;
    align-items: end;
    margin-bottom: 5px;
}

.project-info {
    width: 100%;
    max-width: 295px;
    position: relative;
    padding: 10px;
    display: flex;
    justify-content: space-between;
    background-color: rgb(var(--main-color));
    border-radius: 5px;
    cursor: pointer;
    transition: .2s;
}

.project-info:hover .project-options {
    opacity: 1;
}

.project-options {
    color: rgb(var(--grayed-text-color));
    position: absolute;
    right: 10px;
    transition: .2s;
    opacity: 0;
}

.project-options:hover {
    color: rgb(var(--text-color));
}

.project-info:hover {
    background-color: rgb(var(--tertiary-color));
}

.project-title {
    max-width: calc(100% - 34px);
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.settings-menu {
    align-self: end;
    color: rgb(var(--grayed-text-color));
    font-size:.9rem;
}

.settings-menu li {
    display: flex;
    align-items: center;
    gap:5px;
    margin: 5px;
    cursor: pointer;
    transition: .2s;
}

.settings-menu li:hover {
    color: rgb(var(--accent-color-bright));
}

.settings-menu li:active {
    color: rgb(var(--accent-color));
}

/* MAIN */

main {
    flex: auto;
    display: flex;
    flex-direction: column;
}

/* HEADER  */

main header {
    background-color: rgb(var(--accent-color));
    height: 100px;
    padding: var(--padding);
    display: flex;
    justify-content: space-around;
    align-items: center;
    box-shadow: 0px 3px 5px rgb(var(--secondary-color));
}

h2 {
    margin: 0;
}

.active-project-description {
    font-size: var(--smaller-text);
    max-width: 40ch;
    color: rgb(var(--grayed-text-color));
    background-color: rgb(var(--secondary-color));
    padding: 10px;
    border-radius: 5px;
}

/* TO DO LIST  */

.project-container {
    flex: auto;
    overflow-y: auto;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(25ch,1fr));
    gap: 10px;
    padding: var(--padding);
}

.to-do-list-container {
    border: solid 1px rgb(var(--grayed-text-color));
    border-radius: 5px;
    list-style: none;
    margin: 0;
    height: fit-content;
}

.to-do-list-container ul {
    padding: 0;
    list-style: none;
    margin: 0;
}

.task > .task-container, .subtask {
    border-bottom: solid 1px rgb(var(--tertiary-color));
    border-right: solid 10px rgb(var(--tertiary-color));
    
}
.task-container {
    padding: var(--padding);
    display: flex;
    gap:5px;
    /* align-items: center; */
    position: relative;
    transition: .2s;
    cursor: pointer;
}

/* 
li, li > * {
} */

.task:first-child > .task-container {
    border-radius: 5px 5px 0 0;
}

.task {
    flex-direction: column;
}
/* .task-container {
    width: 100%;
} */

li.subtask {
    padding-left: 35px;
    transition: .2s;
}


/* CHECKBOX  */

.to-do-list .list-checkbox {
    position: absolute;
    top:0;
    left: 0;
    width: 0px;
    height: 0px;
    opacity: 0;
    outline: 0px;
    border: none;
    cursor: pointer;
}

.checkbox-container {
    content: "hello";
    position: relative;
    display: inline-block;
    width:20px;
    height:20px;
    border: solid 1px rgb(var(--grayed-text-color));
    border-radius: 5px;
    top:0;
    left:0;
    transition: .2s;
    cursor: pointer;
    /* z-index: 2; */
}

.checkbox-container:hover {
    border-color: rgb(var(--text-color));
}

.list-checkbox + label .checkmark {
    position: absolute;
    width: 8px;
    height: 18px;
    transform: rotate(45deg);
    border: solid rgb(var(--accent-color));
    border-width: 0 3px 3px 0;
    bottom:15px;
    left: 20px;
    transition: .2s;
    opacity: 0;
    /* z-index: 3; */
    cursor: pointer;
    box-shadow: 2px -3px 0 2px rgb(var(--main-color)), inset -3px -3px 0 2px rgb(var(--main-color));
}

.list-checkbox:checked  + label .checkmark {
    opacity: 1;
    transform: rotate(45deg);
    width: 10px;
    height: 20px;
}

/* COMPLETED TASK TEXT  */

.list-checkbox ~ .task-text {
    position: relative;
    transition: .2s;
    display: inline-block;
}

.list-checkbox:checked ~ .task-text {
    color:rgb(var(--grayed-text-color));
    transform: skew(-15deg);
}

.list-checkbox ~ .task-text::after {
    position: absolute;
    content: '';
    height: 1px;
    top:50%;
    left: 0;
    display: block;
    background-color: rgb(var(--grayed-text-color));
    width: 0;
    transition: .4s;
}

.list-checkbox:checked ~ .task-text::after {
    width: 100%;
    color: rgb(var(--text-color));
}

.to-do-list-container button {
    margin: 10px;
}

.task-container {
    transition: .2s;
}

.task > .task-container:hover, .subtask:hover {
    background-color: rgb(var(--tertiary-color));
}

/* DRAG ICON  */

.task-container:hover .drag {
    opacity: 1;
}

.drag {
    position: absolute;
    right: 10px;
    top:25%;
    color: rgb(var(--grayed-text-color));
    cursor: move;
    transition: .2s;
    opacity: 0;
}

.drag:hover {
    color: rgb(var(--text-color));
}

.task > .task-container:hover .checkmark, .subtask:hover .checkmark {
    box-shadow: 2px -3px 0 2px rgb(var(--tertiary-color)), inset -3px -3px 0 2px rgb(var(--tertiary-color));
}

.dragging {
    background-color: rgb(var(--tertiary-color));
}

.dragging .checkmark {
    box-shadow: 2px -3px 0 2px rgb(var(--tertiary-color)), inset -3px -3px 0 2px rgb(var(--tertiary-color));
}

/* SPLIT BUTTON  */

.add-new {
    display: flex;
    height: min-content;
    width: min-content;
    justify-self: center;
    position: relative;
}

.split-button-button {
    border-radius: 5px 0 0 5px;
}

.split-button-button:hover + .split-button-dropdown {
    background-color: rgb(var(--accent-color-bright));
}

.split-button-button:active + .split-button-dropdown {
    background-color: rgb(var(--accent-color));
}

.split-button-dropdown {
    border-radius: 0 5px 5px 0;
    display: flex;
    align-items: center;
    border-left: solid 1px rgba(var(--tertiary-color), .2);
    position: relative;
    /* z-index: 1; */
}

.split-button-dropdown:active, .split-button-dropdown.open {
    border-radius: 0 5px 0 0;
}

.split-button-dropdown.open .split-button-dropdown-list {
    display: block;
}

.split-button-dropdown-list {
    display: none;
    position:absolute;
    right: 0;
    top:100%;
    margin: 0;
    width: 100%;
    padding: 0;
    list-style: none;
    text-align: left;
    background-color: rgb(var(--accent-color));
    border-radius: 0 0 5px 5px
}

.split-button-dropdown-list li {
    padding: 5px 10px;
}

.split-button-dropdown-list li:first-child {
    border-bottom: solid 1px rgba(var(--tertiary-color), .2);
}

.split-button-dropdown-list li:hover {
    background-color: rgb(var(--accent-color-bright));
}

.split-button-dropdown-list li:active {
    background-color: rgb(var(--accent-color));
}

.split-button-dropdown-list li:last-child {
    border-radius: 0 0 5px 5px;
}

.task-due-date {
    color: rgb(var(--grayed-text-color));
    font-size: .8rem;
    position: absolute;
    right:10px;
    display: block;
    transition: .2s;
}

.to-do-list li:hover .task-due-date {
    display: none;
}

.hidden {
    display: none;
}
.show {
    display: flex;
}

/* MODAL  */
.modal-container {
    position:fixed;
    top:0;
    left:0;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    overflow-y: auto;
}
.modal-bg {
    width: 100%;
    height: 100%;
    background-color: rgba(var(--main-color), .5);
    position: fixed;
}
.modal {
    border: solid 1px rgb(var(--grayed-text-color));
    background-color: rgb(var(--main-color));
    width: min-content;
    padding: var(--padding);
    border-radius: 5px;
    box-shadow: 5px 5px 3px rgba(0,0,0, .2);
    z-index: 1;
    position:absolute;
}
.drag-bar {
    width: 100%;
    height: 15px;
    cursor: move;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    margin-bottom: 10px;
}
.drag-bar div {
    width: 100%;
    height: 1px;
    background-color: rgb(var(--tertiary-color));
}
.task-details {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.task-title {
    padding: 0;
    font-size: 1.2rem;
    background-color: transparent;
    color: rgb(var(--text-color));
    border-style: solid;
    border-width: 0 0 1px 0;
    overflow: hidden;
    text-overflow: ellipsis;
    outline: none;
    transition: .2s;
}
label[for="new-task-due-date"] {
    display: flex;
    align-items: center;
    gap: 5px;
}
.new-task-due-date {
    background-color: transparent;
    color: rgb(var(--text-color));
}

.task-details fieldset {
    border: none;
    display: flex;
    flex-direction: column;
    padding: 0;
    margin: 0;
}

.task-details fieldset > * {
    display: flex;
    gap: 5px;
    align-items: center;
}

.task-details small {
    color: rgb(var(--grayed-text-color));
}

.add-subtasks label {
    display: flex;
    gap: 5px;
    align-items: center;
}

.task-details textarea {
    resize: none;
    background-color: transparent;
    border: solid 1px rgb(var(--grayed-text-color));
    border-radius: 5px;
    color: inherit;
    padding: 5px;
    outline: none;
    transition: .2s;
}

.task-details .cancel, .task-details .cancel:active {
    background-color: rgba(var(--danger),.8);
}

.task-details .cancel:hover {
    background-color: rgb(var(--danger));
}

label[for="pretty-date"] {
    position: relative;
    border-bottom: solid 1px;
    cursor: pointer;
}

.pretty-date-container {
    position: relative;
    font-family: sans-serif;
    display: inline-block;
    padding: 5px;
    border-radius: 5px;
    cursor: pointer;
    transition: .2s;
}
.pretty-date-container:hover, .task-details textarea:hover, .task-title:hover, .pretty-date-container:focus, .task-details textarea:focus, .task-title:focus {
    background-color: rgb(var(--tertiary-color));
}
.pretty-date-container svg {
    transition: .2s;
}
.pretty-date-container svg:hover {
    opacity: .5;
}
#pretty-date {
display: block;
width: 0px;
height: 0px;
padding: 0;
outline: none;
position: absolute;
left:0;
bottom:0;
opacity: 0;
}

.task-priority {
    display: flex;
    align-items: baseline;
    gap:1ch;
}

.task-priority span#priority-selection {
    display: flex;
    align-items: center;
    gap:1ch;
}

.task-priority input {
    display: block;
    width: 0;
    height: 0;
    opacity: 0;
    position: absolute;
}

.task-priority-list {
    position: absolute;
    box-shadow: 3px 3px 3px rgba(0,0,0, .2);
}

.task-priority-list label {
    padding: 5px;
    background-color: rgb(var(--accent-color));
    cursor: pointer;
    position: relative;
}

.task-priority-list label:hover {
    background-color: rgb(var(--accent-color-bright));
}

.task-priority-list label.active {
    background-color: rgb(var(--accent-color-bright));
}

.task-priority svg {
    cursor: pointer;
}